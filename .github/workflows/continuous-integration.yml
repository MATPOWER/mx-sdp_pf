name: CI

# controls when action will run
on:
  # triggers workflow on push events
  push:
  # allows workflow to be triggered manually from Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
#        os: [macos-10.15, macos-11.0, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        os: [macos-latest, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install Octave (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      uses: MATPOWER/action-install-octave-linux@v1

    - name: Install Octave (macOS)
      if: startsWith(matrix.os, 'macos')
      uses: MATPOWER/action-install-octave-macos@v1

    - name: ${{ env.ML_NAME }} ${{ env.ML_VER }} Installed
      run: $ML_CMD ver

    - name: Install OpenBLAS (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get install -y -qq libopenblas-dev

    - name: Build/Install SeDuMi
      run: |
        git clone --depth=1 https://github.com/sqlp/sedumi.git $HOME/sedumi
        cd $HOME/sedumi
        mv vec.m vec.m.disabled
        $ML_CMD "install_sedumi('-rebuild'); savepath"

    - name: Build/Install SDPT3
      run: |
        git clone --depth=1 https://github.com/sqlp/sdpt3.git $HOME/sdpt3
        cd $HOME/sdpt3
        $ML_CMD "install_sdpt3('-rebuild'); savepath"

    - name: Install YALMIP
      run: |
        git clone --depth=1 -b R20180817 https://github.com/yalmip/YALMIP.git $HOME/yalmip
        $ML_CMD "addpath(genpath('$HOME/yalmip', '.git', 'o_win', 'dev'), '-end'); savepath"

    - name: Install MATPOWER
      run: |
        git clone --depth=1 https://github.com/MATPOWER/matpower.git $HOME/matpower
        env $ML_PATHVAR=$HOME/matpower $ML_CMD "install_matpower(1,1,1)"
        $ML_CMD mpver
        echo "TEST_PATH=${GITHUB_WORKSPACE}/lib:${GITHUB_WORKSPACE}/lib/t" >> $GITHUB_ENV

    - name: Test SeDuMi availability, print version number
      run:  |
        $ML_CMD "if ~have_feature('sedumi'), exit(1); end"
        $ML_CMD "x = sedumi([1 1], 1, [1;2]);"

    - name: Test SDPT3 availability, print version number
      run:  |
        $ML_CMD "if ~have_feature('sdpt3'), exit(1); end"
        $ML_CMD "help sdpt3"

    - name: Test YALMIP availability, print version number
      run:  |
        $ML_CMD "if ~have_feature('yalmip'), exit(1); end"
        $ML_CMD "yalmip('version')"

    - name: Test SDP_PF
      run: |
        env $ML_PATHVAR=$TEST_PATH $ML_CMD mpver
        env $ML_PATHVAR=$TEST_PATH $ML_CMD  "test_sdp_pf(1,1)"
